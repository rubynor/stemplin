<%= render PhlexUI::Dialog.new(open: true, data: { controller: "custom-dialog" }) do %>
  <%= render PhlexUI::Dialog::Trigger.new(class: "hidden", data: { custom_dialog_target: "trigger" }) do %>
    <%= render PhlexUI::Button.new { "Open Dialog" } %>
  <% end %>
  <%= render PhlexUI::Dialog::Content.new(class: "bg-white") do %>
    <%= turbo_frame_tag :modal do %>
      <%= form_with url: workspace_teams_path, method: :post, scope: user do |form| %>
        <div class="flex flex-col gap-y-4">
          <span class="font-semibold text-gray-600 text-lg"> <%= t("common.add_member") %></span>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { t("registration.first_name") } %>
              <%= form.text_field :first_name, required: true, class: "border-gray-200 rounded-md w-full", autofocus: true %>
              <% user.errors.full_messages_for(:first_name).each do |message|%>
                <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
              <% end %>
            <% end %>
          <% end %>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { t("registration.last_name") } %>
              <%= form.text_field :last_name, required: true, class: "border-gray-200 rounded-md w-full" %>
              <% user.errors.full_messages_for(:last_name).each do |message|%>
                <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
              <% end %>
            <% end %>
          <% end %>
          <%= render PhlexUI::Form::Item.new do  %>
            <%= render PhlexUI::Label.new { t("common.role") } %>
            <%= render PhlexUI::Hint.new { t("common.select_organization_user") } %>
            <%= form.select :role, roles.map { |role| [t("access_info.role." + role), role] }, { prompt: t("common.select_role") }, required: true, class: "border-gray-200 rounded-md w-full" %>
          <% end %>
          <% # TODO: The 'Projects' input should only show if 'organization user' is chosen %>
          <%= render PhlexUI::Form::Item.new do  %>
            <%= render PhlexUI::Label.new { "Projects" } %>
            <%= render PhlexUI::Hint.new { "Select the projects this user should have access to." } %>
            <%= render GroupedSelectMultipleComponent.new form, :project_ids, grouped_projects, :name, :id, :name %>
          <% end %>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { t("common.email") } %>
              <%= form.email_field :email, required: true, class: "border-gray-200 rounded-md w-full" %>
              <% user.errors.full_messages_for(:email).each do |message|%>
                <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
              <% end %>
            <% end %>
          <% end %>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { t("registration.password") } %>
              <%= render PhlexUI::Hint.new { t("common.share_temporary_password_with_user") } %>
              <%= form.password_field :password, required: true, class: "border-gray-200 rounded-md w-full" %>
              <% user.errors.full_messages_for(:password).each do |message|%>
                <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
              <% end %>
            <% end %>
          <% end %>
          <%= content_tag(:div, class: "flex flex-col gap-y-4") do %>
            <%= render PhlexUI::Form::Item.new(class: "flex flex-col") do  %>
              <%= render PhlexUI::Label.new { t("registration.confirm_password") } %>
              <%= form.password_field :password_confirmation, required: true, class: "border-gray-200 rounded-md w-full" %>
              <% user.errors.full_messages_for(:password_confirmation).each do |message|%>
                <%= render PhlexUI::InputError.new(class: "w-full text-red-600 italic text-xs") { message }  %>
              <% end %>
            <% end %>
          <% end %>
        </div>
        <%= render PhlexUI::Dialog::Footer.new(class: "mt-4 pt-4 border-t border-gray-100") do %>
          <%= render ButtonComponent.new(variant: :outline, data: { action: 'click->dismissable#dismiss' }) { t("common.cancel") } %>
          <%= render ButtonComponent.new(type: :submit) { t("common.save") } %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
