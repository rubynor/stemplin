<%= render PhlexUI::Table::Row.new(id: "#{dom_id(project)}_listitem") do %>
  <%= render PhlexUI::Table::Cell.new do %>
    <%= link_to workspace_project_path(project), class: "flex flex-col pl-2" do %>
      <div class="flex flex-row items-center gap-x-1">
        <span class="font-medium text-gray-700 text-sm"><%= project.name %></span>
      </div>
      <div class="w-32 sm:w-64 lg:w-80 xl:w-96 truncate">
        <span class="text-gray-500 text-xs"><%= project.description %></span>
      </div>
    <% end %>
  <% end %>

  <%= render PhlexUI::Table::Cell.new(class: "w-36") do %>
    <% if project.billable %>
      <div>
        <span class="text-gray-400"><%= @currency %></span>
        <span class="font-medium"><%= project.rate_currency %></span>
      </div>
    <% else %>
      <%= render PhlexUI::Badge.new(variant: :gray, class: "!rounded-full flex gap-x-1") do %>
        <span><%= t("common.non_billable") %></span>
      <% end %>
    <% end %>
  <% end %>

  <%= render PhlexUI::Table::Cell.new(class: "flex justify-center") do %>
    <%= render PhlexUI::DropdownMenu.new(options: { placement: 'bottom-end', offset: 0, duration: 0 }) do %>
      <%= render PhlexUI::DropdownMenu::Trigger.new do %>
        <%= render ButtonComponent.new(type: :button, variant: :outline) do %>
          <i class="uc-icon text-gray-500">&#xe975;</i>
        <% end %>
      <% end %>
      <%= render PhlexUI::DropdownMenu::Content.new(class: "flex flex-col w-fit min-w-0 !p-0 divide-y divide-gray-100") do %>
        <%= render ButtonComponent.new(path: edit_workspace_project_path(project), method: :get, variant: :ghost, class: "w-full") do %>
          <span><%= t("common.edit") %></span>
          <i class="uc-icon text-gray-500 ml-2">&#xe972;</i>
        <% end %>

        <%- has_time_regs = project.time_regs.any? %>
        <%- turbo_body = "#{t("description.proceed_deletion_of_the_task")} <span class='font-semibold text-primary'>#{project.name}</span>? #{t("common.cannot_be_undone")}" %>
        <%= render TooltipComponent.new(note: has_time_regs ? t("common.project_has_recorded_time") : nil, class: "flex", options: { placement: "top" }) do %>
          <%= render ButtonComponent.new(variant: :ghost, method: :delete, path: workspace_project_path(project), class: "flex w-full",  disabled: has_time_regs, form: { data: { turbo_confirm: turbo_body }, class: "w-full" }) do %>
            <span><%= t("common.delete") %></span>
            <i class="uc-icon ml-2">&#xeb97;</i>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
