<%= render PhlexUI::Dialog.new(open: true, data: { controller: "custom-dialog" }) do %>
  <%= render PhlexUI::Dialog::Trigger.new(class: "hidden", data: { custom_dialog_target: "trigger" }) do %>
    <%= render PhlexUI::Button.new { "Open Dialog" } %>
  <% end %>
  <%= render PhlexUI::Dialog::Content.new(class: "bg-white") do %>
    <%= content = capture do %>
      <%= form_with(model: time_reg, id: dom_id(time_reg), method: time_reg.new_record? ? :post : :put, data: { controller: "custom-input", "custom-input-active_text_value": time_reg.new_record? ? t("common.create_time_reg") : t("common.update_time_reg") }.merge(@chosen_date != Date.today ? { "custom-input-inactive_text_value": t("common.create_time_reg") } : {"custom-input-inactive_text_value": t("common.start_timer")})) do |form| %>
        <%= render PhlexUI::Dialog::Header.new do %>
          <%= render PhlexUI::Dialog::Title.new { title } %>
          <%= render PhlexUI::Dialog::Description.new { format_date(chosen_date) } %>
        <% end %>
        <%= render PhlexUI::Dialog::Middle.new do %>
          <%= content_tag(:div, class: "w-full flex flex-col") do %>
            <div class="block" data-controller="time-tasks">
              <% time_reg.errors.full_messages_for(:base).each do |message| %>
                <div  class="text-red-600 text-xs italic mt-1"><%= message %></div>
              <% end %>
              <%= hidden_field_tag :date, chosen_date %>
              <div class="mb-4" data-time-tasks-target="project">
                <%= form.label :project_id, class: 'block text-gray-700 text-sm font-bold mb-2 hidden' %>
                <b class= "text-gray-700 text-sm" >
                  <%= t('common.project') %>
                </b>
                <%= form.grouped_collection_select :project_id, clients, :projects, :name, :id, :name, {
                  disabled: "",
                  selected: time_reg.project&.id || "",
                  prompt: t('common.select_project'),
                }, {
                  class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white'
                } %>
              </div>

              <div class="mb-4" data-time-tasks-target="task">
                <%= form.label :assigned_task_id, class: 'block text-gray-700 text-sm font-bold mb-2 hidden' %>
                <b class= "text-gray-700 text-sm" >
                  <%= t('task.assign_task') %>
                </b>
                <%= form.collection_select :assigned_task_id, (assigned_tasks || [] ), :id, :name, {
                  selected: time_reg.assigned_task&.id }, {
                                              class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white'
                                            } %>
                <% time_reg.errors.full_messages_for(time_reg.new_record? ? :assigned_task_id : :assigned_task).each do |message| %>
                  <div class="text-red-600 italic text-xs mt-1"><%= t('alert.please_select_a_task') %></div>
                <% end %>
              </div>

              <div class="mb-4">
                <%= form.label :notes, class: 'block text-gray-700 text-sm font-bold mb-2 hidden' %>
                <% time_reg.errors.full_messages_for(:notes).each do |message| %>
                  <div  class="text-red-600 text-xs italic mt-1"><%= message %></div>
                <% end %>
                <b class= "text-gray-700 text-sm" >
                  <%= t('common.notes') %>
                </b>
                <%= form.text_area :notes, class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white' %>
              </div>

              <%= content_tag :div do %>
                <%= form.label :minutes, t('common.time'), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                <% time_reg.errors.full_messages_for(:minutes).each do |message| %>
                  <div class="text-red-600 italic text-xs mt-1" data-refresh-minutes-target="output"><%= message %></div>
                <% end %>
                <%= form.hidden_field :minutes, data: { "custom-input-target": "hiddenInput" } %>
                <%= form.text_field :minutes_string, placeholder: "0:00", autocomplete: "off", data: {
                  action: "custom-input#updatehiddenInput change->custom-input#updateFormat",
                  "custom-input-target": "input"
                }, value: (convert_time_int(time_reg.minutes) unless time_reg.new_record?),
                                    class: 'text-end w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white'
                %>
                <%= form.hidden_field :date_worked, value: chosen_date %>
              <% end %>
            </div>
          <% end %>
        <% end %>
        <%= render PhlexUI::Dialog::Footer.new(class: "mt-4 pt-4 border-t border-gray-100") do %>
          <%= render ButtonComponent.new(variant: :outline, data: { action: 'click->dismissable#dismiss' }) { t("common.cancel") } %>
          <%= render ButtonComponent.new(type: :submit, data: { custom_input_target: "submitButton" }) {} %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
