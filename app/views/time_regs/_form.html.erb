<%- is_admin_adding_new_record = defined?(team_members) && team_members.present? %>
<%= render RubyUI::Dialog.new(open: true, data: { controller: "custom-dialog" }) do %>
  <%= render RubyUI::DialogTrigger.new(class: "hidden", data: { custom_dialog_target: "trigger" }) do %>
    <%= render RubyUI::Button.new { "Open Dialog" } %>
  <% end %>
  <%= render RubyUI::DialogContent.new(class: "bg-white") do %>
    <%= content = capture do %>


      <%= form_with(model: time_reg, id: dom_id(time_reg), method: time_reg.new_record? ? :post : :put, data: {
        controller: "custom-input custom-disable",
        custom_disable_initial_status_value: time_reg.task.present?,
        "custom-input-active_text_value": active_text(time_reg),
        "custom-input-inactive_text_value": inactive_text(time_reg)
      }) do |form| %>
        <%= render RubyUI::DialogHeader.new do %>
          <%= render RubyUI::DialogTitle.new { title } %>
          <%= render RubyUI::DialogDescription.new { format_date(chosen_date) } unless is_admin_adding_new_record %>
        <% end %>
        <%= render RubyUI::DialogMiddle.new do %>
          <%= content_tag(:div, class: "w-full flex flex-col") do %>
            <div class="block" data-controller="time-tasks">
              <% time_reg.errors.full_messages_for(:base).each do |message| %>
                <div  class="text-red-600 text-xs italic mt-1"><%= message %></div>
              <% end %>
              <%= hidden_field_tag :date, chosen_date %>
              <%= hidden_field_tag :provide_user, is_admin_adding_new_record %>
              <% if is_admin_adding_new_record %>
                <div class="mb-4">
                  <%= form.label :user, t("common.member"), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                  <%= form.collection_select :user_id, (team_members || [] ), :id, ->(member) { "#{member.first_name} #{member.last_name}" }, { selected: "", prompt: t("common.select_member") }, {
                    class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white'
                  } %>
                  <% time_reg.errors.full_messages_for(:user).each do |message| %>
                    <div class="text-red-600 italic text-xs mt-1"><%= t("common.select_member") %></div>
                  <% end %>
                </div>
                <div class="mb-4">
                  <%= render DropdownComponent.new(options: { close_background_delay: true }, class: "") do %>
                    <%= form.label :date_worked, t("common.date_worked"), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                    <%= render DropdownComponentTrigger.new(class: "w-full bg-white border border-gray-200 rounded-md px-2 py-2 flex items-center gap-x-1 justify-between") do %>
                      <span class="text-gray-600 text-base" data-date-badge-target="dateWorkedBadge"><%= t("common.select_date_worked") %> </span>
                      <i class="uc-icon text-2xl text-gray-500">&#xe81d;</i>
                    <% end %>
                    <%= render DropdownComponentContent.new do %>
                      <%= form.hidden_field :date_worked, id: "date_worked", value: chosen_date, data: { controller: "ruby-ui--calendar-input", badge_target: "dateWorkedBadge" } %>
                      <%= render RubyUI::Calendar.new(selected_date: chosen_date, input_id: "#date_worked") %>
                    <% end %>
                  <% end %>
                </div>
              <% end %>
              <div class="mb-4" data-time-tasks-target="project">
                <%= form.label :project_id, t('common.project'), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                <%= form.grouped_collection_select :project_id, clients, :items, :name, :id, :name, {
                  selected: time_reg.project&.id || "",
                  prompt: t('common.select_project'),
                }, {
                  class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white',
                  data: { action: "change->custom-disable#toggleElement", custom_disable_enable_param: true }
                } %>
              </div>

              <div class="mb-4" data-time-tasks-target="task">
                <%= form.label :assigned_task_id, t('task.assign_task'), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                <%= form.collection_select :assigned_task_id, (assigned_tasks || [] ), :id, :name, {
                  selected: time_reg.assigned_task&.id, include_blank: !@time_reg.project }, {
                                              class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white'
                                            } %>
                <% time_reg.errors.full_messages_for(:assigned_task).each do |message| %>
                  <div class="text-red-600 italic text-xs mt-1"><%= t('alert.please_select_a_task') %></div>
                <% end %>
              </div>

              <div class="mb-4">
                <%= form.label :notes, t('common.notes'), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                <%= form.text_area :notes, placeholder: t("common.remember_to_fill_out"), class: 'w-full rounded-md p-2 border border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white text-black placeholder:text-gray-400' %>
                <% time_reg.errors.full_messages_for(:notes).each do |message| %>
                  <div  class="text-red-600 text-xs italic mt-1"><%= message %></div>
                <% end %>
              </div>

              <%= content_tag :div do %>
                <%= form.label :minutes_string, t('common.time'), class: 'block text-gray-700 text-sm font-bold mb-2' %>
                <%= form.hidden_field :minutes, data: { "custom-input-target": "hiddenInput" } %>
                <%= form.text_field :minutes_string, placeholder: "0:00", pattern: /^\d+([:,]\d+)?(\.\d+)?$/, autofocus: true, data: {
                  action: "custom-input#updatehiddenInput change->custom-input#updateFormat",
                  "custom-input-target": "input"
                }, value: (convert_time_int(time_reg.minutes) unless time_reg.new_record?),
                        class: 'text-end w-full rounded-md p-2 border invalid:border-red-700 border-gray-300 focus:ring-1 focus:ring-seaGreenDark focus:border-seaGreenDark ring-offset-1 ring-offset-white text-black placeholder:text-gray-300'
                %>
                <% unless is_admin_adding_new_record %>
                  <%= form.hidden_field :date_worked, value: chosen_date %>
                <% end %>
                <% time_reg.errors.full_messages_for(:minutes).each do |message| %>
                  <div class="text-red-600 italic text-xs mt-1"><%= message %></div>
                <% end %>
              <% end %>
            </div>
          <% end %>
        <% end %>
        <%= render RubyUI::DialogFooter.new(class: "mt-4 pt-4 border-t border-gray-100") do %>
          <%= render ButtonComponent.new(variant: :outline, data: { action: 'click->ruby-ui--dialog#dismiss' }) { t("common.cancel") } %>
          <%= render ButtonComponent.new(type: :submit, data: { custom_input_target: "submitButton", custom_disable_target: "content" }) {} %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
