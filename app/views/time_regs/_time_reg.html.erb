<%= content_tag(:div, id: dom_id(time_reg), data: { controller: "refresh-minutes", refresh_minutes_active_value: time_reg.active?, refresh_minutes_minutes_value: time_reg.current_minutes, refresh_minutes_format_value: "H:mm" }, class: "shadow-sm rounded-md p-4 flex flex-col lg:flex-row lg:items-center lg:justify-between gap-y-4") do %>
  <div class="flex flex-row gap-x-4">
    <div class="bg-gray-50 border border-gray-100 rounded flex justify-center items-center w-12 h-12 relative">
      <i class="uc-icon text-lg text-gray-400">&#xe8bb;</i>
      <% if time_reg.active? %>
        <div class="absolute -bottom-2 -right-2 bg-yellow-500 rounded-full w-4 h-4 flex justify-center items-center">
          <%= image_tag "hour_glass.svg", class: "animate-spin w-2.5" %>
        </div>
      <% end %>
    </div>
    <div class="flex flex-row items-start w-full gap-x-2">
      <div class="flex flex-col w-full lg:w-auto">
        <div class="flex flex-row gap-x-2 justify-between lg:justify-start">
          <div class="flex flex-col lg:flex-row lg:items-center text-sm lg:text-base text-gray-600 gap-x-2 w-fit">
            <span><%= time_reg.task.name %></span>
            <span class="hidden lg:block">-</span>
            <span class="font-semibold"><%= time_reg.project.name %></span>
          </div>
          <div class="flex flex-row-reverse lg:flex-row items-center h-fit gap-2">
            <%= render RubyUI::Badge.new(variant: time_reg.is_zero_minutes? ? :red : :gray, class: "!rounded-full flex gap-x-1") do %>
              <i class="uc-icon text-sm">&#xe8bb;</i>
              <span data-refresh-minutes-target="minutes">
                <%= convert_time_int(time_reg.current_minutes) %>
              </span>
            <% end %>
            <%= render TooltipComponent.new(note: t("time_regs.zero_minutes"), class: "#{"invisible" unless time_reg.is_zero_minutes?}") do %>
              <%= render RubyUI::Badge.new(variant: :red, class: "!rounded-full flex gap-x-1 cursor-default") do %>
                <i class="uc-icon text-sm">&#xe99b;</i>
              <% end %>
            <% end %>
          </div>
        </div>
        <div class="w-fit">
          <span class="text-sm text-gray-800"><%= time_reg.project.client.name %></span>
        </div>
        <div class="w-full lg:pr-6">
          <%= simple_format time_reg.notes, class: "text-xs text-gray-500" %>
        </div>
      </div>
    </div>
  </div>
  <div class="flex gap-x-4 justify-end">
    <% if time_reg.date_worked != Date.today && !time_reg.active? %>
      <%= render ButtonComponent.new(path: new_modal_time_regs_path(date: Date.today, assigned_task_id: time_reg.assigned_task_id, notes: time_reg.notes), method: :post, class: "gap-x-2", variant: :outline) do %>
        <i class="uc-icon text-base">&#xe9c7;</i>
        <span class="hidden md:block"><%= t("common.copy_to_today") %></span>
      <% end %>
    <% else %>
      <%= render ButtonComponent.new(path: time_reg_toggle_active_path(time_reg), method: :patch, class: "gap-x-2", variant: time_reg.active? ? :secondary : :outline) do %>
        <% if time_reg.active? %>
          <i class="uc-icon text-base">&#xeb59;</i>
        <% else %>
          <i class="uc-icon text-base">&#xead1;</i>
        <% end %>
        <span class="hidden md:block"><%= time_reg.active? ? t("common.stop") : t("common.start") %></span>
      <% end %>
    <% end %>

    <%= render ButtonComponent.new(path: edit_modal_time_reg_path(time_reg, date: @chosen_date), method: :put, class: "gap-x-2", variant: :outline) do %>
      <i class="uc-icon text-base">&#xe972;</i>
      <span class="hidden md:block"><%= t("common.edit") %></span>
    <% end %>

    <%- turbo_body = "
      #{t("notice.do_you_want_to_proceed_with_deletion")}
      <span class='font-semibold text-primary'>#{time_reg.project.name}</span>
      #{t("notice.with_a_task")}
      <span class='font-semibold text-primary'>#{time_reg.task.name}</span>
      and
      <span class='font-semibold text-primary'>#{convert_time_int(time_reg.minutes)}</span>
      #{t("notice.logged_action_cannot_be_undone")}
    " %>

    <%= render ButtonComponent.new(variant: :destructive, method: :delete, path: time_reg_path(time_reg), form: { data: { turbo_confirm: turbo_body } }) do %>
      <i class="uc-icon text-base">&#xeb97;</i>
      <span class="hidden md:block"><%= t("common.delete") %></span>
    <% end %>
  </div>
<% end %>
